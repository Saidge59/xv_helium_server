from scapy.all import *

# These functions are purposefully not incredibly smart

def pkt_declaration(packet_name, packet):
    # Force build the packet
    packet = IP(raw(packet))

    output_str = "// Packet {}: {}\n".format(packet_name, repr(packet))
    output_str += "test_packet {} = {{ {},\n    ".format(packet_name, packet.len)
    for count, byte in enumerate(raw(packet)):
      output_str += "0x{:02x}, ".format(byte)
      if (count + 1) % 16 == 0: output_str += "\n    "
    output_str += "\n};\n"
    return output_str

def create_call(scenario_name, helium_fragsize, original_pkt_name, frag_pkt_names):
     # We want to genereate a function call a la
     # create_scenario(scenarios, "basic_fragmentation", 500, &original_pkt_1, 2, &frag_pkt_1, &frag_pkt_2);
     c_create_call_args = [
        "scenarios",
        "\"" + scenario_name + "\"",
        str(helium_fragsize),
        "&" + original_pkt_name,
        str(len(frag_pkt_names))
     ] + ["&" + frag_name for frag_name in frag_pkt_names]

     c_create_call = "create_scenario(" + ", ".join(c_create_call_args) + ");"
     return c_create_call

def create_macro(c_create_calls):
    return "#define CREATE_FRAG_SCENARIOS(scenarios) " + " ".join(c_create_calls)

def prelude():
    output_str = """
#ifndef FRAG_SCENARIO_H
#define FRAG_SCENARIO_H

// This file has been automatically generated by `python/frag_scenrario_main.py`.
// Please don't edit directly -- these arrays are manually created by scapy.

#include "helium.h"
#include "frag_scenario_support.h"
"""
    return output_str

def postlude():
    return "#endif\n"
